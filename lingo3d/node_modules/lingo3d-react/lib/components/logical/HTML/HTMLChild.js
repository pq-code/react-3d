import React, { useLayoutEffect, useRef } from "react";
const style = { position: "absolute", left: 0, top: 0, display: "none" };
const HTMLChild = ({ el, manager }) => {
    const divRef = useRef(null);
    useLayoutEffect(() => {
        const div = divRef.current;
        if (!div)
            return;
        let frustumVisibleOld = false;
        const handle = manager.loop(() => {
            const { frustumVisible } = manager;
            if (frustumVisible !== frustumVisibleOld)
                div.style.display = frustumVisible ? "block" : "none";
            frustumVisibleOld = frustumVisible;
            if (!frustumVisible)
                return;
            div.style.transform = `translateX(${manager.clientX}px) translateY(${manager.clientY}px)`;
        });
        return () => {
            handle.cancel();
        };
    }, []);
    return (React.createElement("div", { style: style, ref: divRef }, el));
};
export default HTMLChild;
