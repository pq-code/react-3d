import { writePrimitive } from '../../../common/primitive';
import { colorToRgbaNumber, colorToRgbNumber } from '../converter/color-number';
import { getColorStringifier } from '../converter/color-string';
export function createColorStringWriter(notation) {
    const stringify = getColorStringifier(notation);
    return (target, value) => {
        writePrimitive(target, stringify(value));
    };
}
export function createColorNumberWriter(supportsAlpha) {
    const colorToNumber = supportsAlpha ? colorToRgbaNumber : colorToRgbNumber;
    return (target, value) => {
        writePrimitive(target, colorToNumber(value));
    };
}
export function writeRgbaColorObject(target, value) {
    const obj = value.toRgbaObject();
    target.writeProperty('r', obj.r);
    target.writeProperty('g', obj.g);
    target.writeProperty('b', obj.b);
    target.writeProperty('a', obj.a);
}
export function writeRgbColorObject(target, value) {
    const obj = value.toRgbaObject();
    target.writeProperty('r', obj.r);
    target.writeProperty('g', obj.g);
    target.writeProperty('b', obj.b);
}
export function createColorObjectWriter(supportsAlpha) {
    return supportsAlpha ? writeRgbaColorObject : writeRgbColorObject;
}
