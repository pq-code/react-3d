import SimpleObjectManager from "../display/core/SimpleObjectManager";
import { MouseInteractionPayload } from "./IMouse";
import IPhysics from "./IPhysics";
import { ExtractProps } from "./utils/extractProps";
export declare type OnIntersectValue = (target: SimpleObjectManager) => void;
export default interface ISimpleObjectManager extends IPhysics {
    onClick?: (e: MouseInteractionPayload) => void;
    onMouseDown?: (e: MouseInteractionPayload) => void;
    onMouseUp?: (e: MouseInteractionPayload) => void;
    onMouseOver?: (e: MouseInteractionPayload) => void;
    onMouseOut?: (e: MouseInteractionPayload) => void;
    onMouseMove?: (e: MouseInteractionPayload) => void;
    onIntersect?: OnIntersectValue;
    onIntersectOut?: OnIntersectValue;
    name: string;
    id?: string;
    intersectIds?: Array<string>;
    width: number;
    height: number;
    depth: number;
    scaleX: number;
    scaleY: number;
    scaleZ: number;
    scale: number;
    rotationX: number;
    rotationY: number;
    rotationZ: number;
    rotation: number;
    bloom: boolean;
    reflection: boolean;
    outline: boolean;
    visible: boolean;
    innerVisible: boolean;
    frustumCulled: boolean;
    metalnessFactor: number;
    roughnessFactor: number;
    environmentFactor: number;
    toon: boolean;
    pbr: boolean;
}
export declare const simpleObjectManagerSchema: Required<ExtractProps<ISimpleObjectManager>>;
export declare const simpleObjectManagerDefaults: ISimpleObjectManager;
