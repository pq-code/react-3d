import { Reactive } from "@lincode/reactivity";
import PositionedItem from "../../api/core/PositionedItem";
import ICharacterCamera, { LockTargetRotationValue } from "../../interface/ICharacterCamera";
import Camera from "../cameras/Camera";
import SimpleObjectManager from "./SimpleObjectManager";
export default class CharacterCamera extends Camera implements ICharacterCamera {
    static defaults: ICharacterCamera;
    static schema: Required<import("../../interface/utils/extractProps").ExtractProps<ICharacterCamera>>;
    constructor();
    lockTargetRotation: LockTargetRotationValue;
    protected targetState: Reactive<PositionedItem | SimpleObjectManager<import("three").Object3D<import("three").Event>> | undefined>;
    append(object: PositionedItem): void;
    attach(object: PositionedItem): void;
    private gyroControlHandle?;
    private _gyroControl?;
    get gyroControl(): boolean;
    set gyroControl(val: boolean);
}
