import { Class } from "@lincode/utils";
import { Light, Object3D } from "three";
import PositionedItem from "../../api/core/PositionedItem";
import Point3d from "../../api/Point3d";
import ILightBase from "../../interface/ILightBase";
import ObjectManager from "./ObjectManager";
export default abstract class LightBase<T extends Light> extends ObjectManager<T> implements ILightBase {
    constructor(light: T, Helper?: Class<Object3D & {
        dispose: () => void;
    }>);
    dispose(): this;
    lookAt(target: PositionedItem | Point3d): void;
    get color(): string;
    set color(val: string);
    get intensity(): number;
    set intensity(val: number);
    getCenter(): Point3d;
}
