import AnimationManager, { PlayOptions } from "./AnimationManager";
import IAnimation, { Animation } from "../../../interface/IAnimation";
import { Resolvable } from "@lincode/promiselikes";
import PositionedItem from "../../../api/core/PositionedItem";
export default abstract class AnimationItem extends PositionedItem implements IAnimation {
    animationManagers?: Record<string, AnimationManager>;
    get animations(): Record<string, AnimationManager>;
    set animations(val: Record<string, AnimationManager>);
    private createAnimation;
    private buildAnimation;
    private makeAnimationProxy;
    protected loadingAnims?: Array<Resolvable>;
    private animationManager?;
    playAnimation(name?: string | number, o?: PlayOptions): Promise<void>;
    stopAnimation(): void;
    get animationPaused(): boolean;
    set animationPaused(value: boolean);
    protected animationName?: string | number;
    private setAnimation;
    private _animation?;
    get animation(): Animation | undefined;
    set animation(val: Animation | undefined);
}
