import { Group } from "three";
import ObjectManager from "../core/ObjectManager";
import { Reactive } from "@lincode/reactivity";
import { boxLightDefaults, boxLightSchema } from "../../interface/IBoxLight";
import AreaLight from "./AreaLight";
export default class BoxLight extends ObjectManager {
    constructor() {
        super(new Group());
        this.intensityState = new Reactive(boxLightDefaults.intensity);
        this.helperState = new Reactive(boxLightDefaults.helper);
        this.colorState = new Reactive(boxLightDefaults.color);
        this.areaState = new Reactive(boxLightDefaults.area);
        Object.assign(this.makeLight(), {
            width: 1000,
            height: 1000,
            innerY: 1000,
            innerRotationX: -90
        });
        Object.assign(this.makeLight(), {
            width: 1000,
            height: 1000,
            innerY: 1000,
            innerRotationX: -90,
            rotationX: 90
        });
        Object.assign(this.makeLight(), {
            width: 1000,
            height: 1000,
            innerY: 1000,
            innerRotationX: -90,
            rotationX: -90
        });
        Object.assign(this.makeLight(), {
            width: 1000,
            height: 1000,
            innerY: 1000,
            innerRotationX: -90,
            rotationZ: 90
        });
        Object.assign(this.makeLight(), {
            width: 1000,
            height: 1000,
            innerY: 1000,
            innerRotationX: -90,
            rotationZ: -90
        });
    }
    makeLight() {
        const light = new AreaLight();
        this.append(light);
        this.watch(this.intensityState.get(val => light.intensity = val));
        this.watch(this.helperState.get(val => light.helper = val));
        this.watch(this.colorState.get(val => light.color = val));
        this.watch(this.areaState.get(val => light.scaleX = light.scaleY = val));
        return light;
    }
    get intensity() {
        return this.intensityState.get();
    }
    set intensity(val) {
        this.intensityState.set(val);
    }
    get helper() {
        return this.helperState.get();
    }
    set helper(val) {
        this.helperState.set(val);
    }
    get color() {
        return this.colorState.get();
    }
    set color(val) {
        this.colorState.set(val);
    }
    get area() {
        return this.areaState.get();
    }
    set area(val) {
        this.areaState.set(val);
    }
    getCenter() {
        return this.getWorldPosition();
    }
}
BoxLight.componentName = "boxLight";
BoxLight.defaults = boxLightDefaults;
BoxLight.schema = boxLightSchema;
